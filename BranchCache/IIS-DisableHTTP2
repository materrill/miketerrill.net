<#
.SYNOPSIS
    PowerShell script to automate disabling HTTP/2 in IIS
.DESCRIPTION
    This script will check the current IIS configuration for binding information
    It will get the current sslFlags for the binding and then add "4" in order to disable HTTP/2
    Use this on Windows Server 2022 and Windows Server 2025 when attempting to download large files when BranchCache is enabled
    until Microsoft provides a fix.
.NOTES
    Author: Mike Terrill/2Pint Software
    Date: August 18, 2025
    Version: 25.08.18
    Requires: Administrative privileges, 64-bit Windows
#>

# Ensure the script runs with elevated privileges
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Write-Error "This script requires administrative privileges. Please run PowerShell as Administrator."
    exit 1
}

Import-Module WebAdministration

# Specify the website name
$siteName = "Default Web Site"

# Define the path to the applicationHost.config file
$configPath = "$env:SystemRoot\System32\inetsrv\config\applicationHost.config"

# Load the configuration file as XML
$config = [xml](Get-Content $configPath)

# Find the specific site and HTTPS binding
$site = $config.configuration["system.applicationHost"].sites.site | Where-Object { $_.name -eq $siteName }
$binding = $site.bindings.binding | Where-Object { $_.protocol -eq "https" -and $_.bindingInformation -like "*:443:*" }

if ($binding) {
    # Get the current sslFlags value (default to 0 if not set)
    $currentSslFlags = [int]($binding.sslFlags ?? "0")

    # Add 4 to disable HTTP/2 (bitwise OR equivalent)
    $newSslFlags = $currentSslFlags -bor 4

    # Set the updated sslFlags value
    $binding.sslFlags = $newSslFlags

    # Save the modified configuration
    $config.Save($configPath)

    # Restart IIS to apply changes
    Write-Host "Restarting IIS to apply HTTP/2 disable setting..."
    iisreset

    Write-Host "HTTP/2 has been disabled for the $siteName HTTPS binding on port 443. New sslFlags value: $newSslFlags"
} else {
    Write-Host "No HTTPS binding found for $siteName on port 443."
}
